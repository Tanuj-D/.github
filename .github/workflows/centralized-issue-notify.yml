name: Centralized Issue Notification

on:
  schedule:
    - cron: '*/15 * * * *' # Runs every 15 minutes
  workflow_dispatch: # Manual trigger for testing

jobs:
  monitor-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Issues from All Repositories
        id: fetch_issues
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          REPOS=("owner/repo1" "owner/repo2" "owner/repo3") # Add your 100 repositories here
          for REPO in "${REPOS[@]}"; do
            echo "Fetching issues for $REPO..."
            curl -H "Authorization: token $PAT" \
                 -H "Accept: application/vnd.github.v3+json" \
                 "https://api.github.com/repos/$REPO/issues?state=open" > "$REPO-issues.json"
          done

      - name: Check and Notify for Issues
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          REPOS=("owner/repo1" "owner/repo2" "owner/repo3") # Add your repositories here
          for REPO in "${REPOS[@]}"; do
            echo "Processing issues for $REPO..."
            ISSUES_FILE="$REPO-issues.json"
            if [ -f "$ISSUES_FILE" ]; then
              while read -r issue; do
                TITLE=$(echo "$issue" | jq -r '.title')
                BODY=$(echo "$issue" | jq -r '.body')
                URL=$(echo "$issue" | jq -r '.html_url')

                if [[ "$BODY" == *"Are you Saxton Lab/Leidos employee?"* && "$BODY" == *"No"* ]]; then
                  echo "Found issue in $REPO requiring notification."
                  curl -s --request POST \
                    --url https://api.sendinblue.com/v3/smtp/email \
                    --header "accept: application/json" \
                    --header "api-key: $SENDINBLUE_API_KEY" \
                    --header "content-type: application/json" \
                    --data '{
                      "sender":{"name":"GitHub Notification","email":"your-email@example.com"},
                      "to":[{"email":"recipient@example.com"}],
                      "subject":"New Issue from Non-Leidos Employee",
                      "htmlContent":"<p>A new issue was created in '"$REPO"':</p><ul><li>Title: '"$TITLE"'</li><li>URL: '"$URL"'</li><li>Description: '"$BODY"'</li></ul>"
                    }'
                fi
              done < <(jq -c '.[]' "$ISSUES_FILE")
            fi
          done
